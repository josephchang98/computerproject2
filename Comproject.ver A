clear all;
close all;

Bw = 1e6; %Bandwidth of the lowpass filter
F0 = 1.5e6;%Bandpass filter's center frequency
Fc = 0.5*Bw;%cutoff frequency of the initial lowpass filter prototype

[B,A] = ellip(6,2,40,2*pi*Fc,'s');%Matlab's built-in elliptical filter design
                                  % 6thorder, 2 dB passband ripple, 40 db rejection

p = roots(A);%Find roots of output-side polynomial (the poles)
pp = p + 1j*2*pi*F0;%Replicate copies of the poles shifted up and down by the 
                    % %bandpass filter's center frequency       
pn = p -1j*2*pi*F0;
p = [pp; pn];

z = roots(B);%Find roots of input-side polynomial (the zeros)
zp = z + 1j*2*pi*F0;%Replicate copies of the zeros shifted up and down by the 
                    %bandpass filter's center frequency
zn = z -1j*2*pi*F0;
z = [zp; zn]; 

Fs = 10*max(imag(p));%10 times larger than largest imaginary part of any pole
L = 1e4;
dF = Fs/L;
lenFreq = L*dF;
F = -0.5*Fs:dF:0.5*Fs;
Ts = 1/Fs;

s = j*2*pi*F;
Z = prod(s-z);
P = prod(s-p);
H = Z./P;

figure(1);
grid on;
plot(F,H);
axis([-10^7 10^7 -80 100]);
xlabel('Frequency');
ylabel('Frequency Response');
title('');

H_ = fftshift(H);
h_ = ifft(H_); %do inverse fft
h = Fs.*h_; %mucltiply result by Fs; result = h(t)
h_real = real(h); %take real part of h(t)

Tk = L*Ts;%This is a given
t = 0:Ts:Tk; 
figure(2);
grid on;
plot(t,h_real);
axis([0 4e-5 -1.5e8 1.5e8]);
xlabel('Frequency');
ylabel('Frequency Response');

t_u = (-2*Tk:Ts:2*Tk)';% ' is very important to unit step function
impulse = t_u==0;
unitstep = t_u>=0;
x = exp(j*2*pi*F0*t_u);
figure(3);
%subplot(2,1,1);
plot(t_u,x);
%subplot(2,1,2);
%plot(t_u,x);%This does start at 0
%axis([-Tk Tk -2 2]);

yss = conv(h_real,x);
figure(4);
subplot(2,1,1);
plot(t_u,real(yss));
subplot(2,1,2);
plot(t_u,imag(yss));%trying to find the time array
